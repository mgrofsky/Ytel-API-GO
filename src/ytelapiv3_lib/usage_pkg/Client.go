/*
 * ytelapiv3_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package usage_pkg


import(
	"fmt"
	"ytelapiv3_lib/models_pkg"
	"github.com/apimatic/unirest-go"
	"ytelapiv3_lib/apihelper_pkg"
	"ytelapiv3_lib/configuration_pkg"
)
/*
 * Client structure as interface implementation
 */
type USAGE_IMPL struct {
     config configuration_pkg.CONFIGURATION
}

/**
 * Retrieve usage metrics regarding your Ytel account. The results includes inbound/outbound voice calls and inbound/outbound SMS messages as well as carrier lookup requests.
 * @param    models_pkg.ProductCodeEnum        productCode            parameter: Optional
 * @param    *string                           startDate              parameter: Optional
 * @param    *string                           endDate                parameter: Optional
 * @param    *string                           includeSubAccounts     parameter: Optional
 * @return	Returns the string response from the API call
 */
func (me *USAGE_IMPL) CreateListUsage (
            productCode models_pkg.ProductCodeEnum,
            startDate *string,
            endDate *string,
            includeSubAccounts *string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/usage/listusage.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "ProductCode" : models_pkg.ProductCodeEnumToValue(productCode),
        "startDate" : startDate,
        "endDate" : endDate,
        "IncludeSubAccounts" : includeSubAccounts,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

