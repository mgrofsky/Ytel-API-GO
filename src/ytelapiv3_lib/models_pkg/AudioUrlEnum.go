/*
 * ytelapiv3_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for AudioUrlEnum enum
 */
type AudioUrlEnum int

/**
 * Value collection for AudioUrlEnum enum
 */
const (
    AudioUrl_MP3 AudioUrlEnum = 1 + iota
    AudioUrl_WAV
)

func (r AudioUrlEnum) MarshalJSON() ([]byte, error) { 
    s := AudioUrlEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *AudioUrlEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  AudioUrlEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts AudioUrlEnum to its string representation
 */
func AudioUrlEnumToValue(audioUrlEnum AudioUrlEnum) string {
    switch audioUrlEnum {
        case AudioUrl_MP3:
    		return "mp3"		
        case AudioUrl_WAV:
    		return "wav"		
        default:
        	return "mp3"
    }
}

/**
 * Converts AudioUrlEnum Array to its string Array representation
*/
func AudioUrlEnumArrayToValue(audioUrlEnum []AudioUrlEnum) []string {
    convArray := make([]string,len( audioUrlEnum))
    for i:=0; i<len(audioUrlEnum);i++ {
        convArray[i] = AudioUrlEnumToValue(audioUrlEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func AudioUrlEnumFromValue(value string) AudioUrlEnum {
    switch value {
        case "mp3":
            return AudioUrl_MP3
        case "wav":
            return AudioUrl_WAV
        default:
            return AudioUrl_MP3
    }
}
