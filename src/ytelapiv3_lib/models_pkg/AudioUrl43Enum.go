/*
 * ytelapiv3_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for AudioUrl43Enum enum
 */
type AudioUrl43Enum int

/**
 * Value collection for AudioUrl43Enum enum
 */
const (
    AudioUrl43_MP3 AudioUrl43Enum = 1 + iota
    AudioUrl43_WAV
)

func (r AudioUrl43Enum) MarshalJSON() ([]byte, error) { 
    s := AudioUrl43EnumToValue(r)
    return json.Marshal(s) 
} 

func (r *AudioUrl43Enum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  AudioUrl43EnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts AudioUrl43Enum to its string representation
 */
func AudioUrl43EnumToValue(audioUrl43Enum AudioUrl43Enum) string {
    switch audioUrl43Enum {
        case AudioUrl43_MP3:
    		return "mp3"		
        case AudioUrl43_WAV:
    		return "wav"		
        default:
        	return "mp3"
    }
}

/**
 * Converts AudioUrl43Enum Array to its string Array representation
*/
func AudioUrl43EnumArrayToValue(audioUrl43Enum []AudioUrl43Enum) []string {
    convArray := make([]string,len( audioUrl43Enum))
    for i:=0; i<len(audioUrl43Enum);i++ {
        convArray[i] = AudioUrl43EnumToValue(audioUrl43Enum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func AudioUrl43EnumFromValue(value string) AudioUrl43Enum {
    switch value {
        case "mp3":
            return AudioUrl43_MP3
        case "wav":
            return AudioUrl43_WAV
        default:
            return AudioUrl43_MP3
    }
}
