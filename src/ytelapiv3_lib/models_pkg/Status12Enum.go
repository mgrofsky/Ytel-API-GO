/*
 * ytelapiv3_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for Status12Enum enum
 */
type Status12Enum int

/**
 * Value collection for Status12Enum enum
 */
const (
    Status12_INPROGRESS Status12Enum = 1 + iota
    Status12_SUCCESS
    Status12_FAILURE
)

func (r Status12Enum) MarshalJSON() ([]byte, error) { 
    s := Status12EnumToValue(r)
    return json.Marshal(s) 
} 

func (r *Status12Enum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  Status12EnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts Status12Enum to its string representation
 */
func Status12EnumToValue(status12Enum Status12Enum) string {
    switch status12Enum {
        case Status12_INPROGRESS:
    		return "inprogress"		
        case Status12_SUCCESS:
    		return "success"		
        case Status12_FAILURE:
    		return "failure"		
        default:
        	return "inprogress"
    }
}

/**
 * Converts Status12Enum Array to its string Array representation
*/
func Status12EnumArrayToValue(status12Enum []Status12Enum) []string {
    convArray := make([]string,len( status12Enum))
    for i:=0; i<len(status12Enum);i++ {
        convArray[i] = Status12EnumToValue(status12Enum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func Status12EnumFromValue(value string) Status12Enum {
    switch value {
        case "inprogress":
            return Status12_INPROGRESS
        case "success":
            return Status12_SUCCESS
        case "failure":
            return Status12_FAILURE
        default:
            return Status12_INPROGRESS
    }
}
