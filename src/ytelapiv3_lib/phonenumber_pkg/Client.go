/*
 * ytelapiv3_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package phonenumber_pkg


import(
	"fmt"
	"ytelapiv3_lib/models_pkg"
	"github.com/apimatic/unirest-go"
	"ytelapiv3_lib/apihelper_pkg"
	"ytelapiv3_lib/configuration_pkg"
)
/*
 * Client structure as interface implementation
 */
type PHONENUMBER_IMPL struct {
     config configuration_pkg.CONFIGURATION
}

/**
 * Get DID Score Number
 * @param    string        phonenumber     parameter: Required
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) CreateGetDIDScore (
            phonenumber string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/getdidscore.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "Phonenumber" : phonenumber,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

/**
 * Transfer phone number that has been purchased for from one account to another account.
 * @param    string        phonenumber        parameter: Required
 * @param    string        fromaccountsid     parameter: Required
 * @param    string        toaccountsid       parameter: Required
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) CreateMoveNumber (
            phonenumber string,
            fromaccountsid string,
            toaccountsid string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/transferphonenumbers.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "phonenumber" : phonenumber,
        "fromaccountsid" : fromaccountsid,
        "toaccountsid" : toaccountsid,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

/**
 * Purchase a phone number to be used with your Ytel account
 * @param    string        phoneNumber     parameter: Required
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) CreatePurchaseNumber (
            phoneNumber string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/buynumber.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "PhoneNumber" : phoneNumber,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

/**
 * Remove a purchased Ytel number from your account.
 * @param    string        responseType     parameter: Required
 * @param    string        phoneNumber      parameter: Required
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) CreateReleaseNumber (
            responseType string,
            phoneNumber string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/releasenumber.{ResponseType}"

    //variable to hold errors
    var err error = nil
    //process optional query parameters
    _queryBuilder, err = apihelper_pkg.AppendUrlWithTemplateParameters(_queryBuilder, map[string]interface{} {
        "ResponseType" : responseType,
    })
    if err != nil {
        //error in template param handling
        return "", err
    }

    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "PhoneNumber" : phoneNumber,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

/**
 * Retrieve the details for a phone number by its number.
 * @param    string        phoneNumber     parameter: Required
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) CreateViewDetails (
            phoneNumber string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/viewnumber.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "PhoneNumber" : phoneNumber,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

/**
 * Remove a purchased Ytel number from your account.
 * @param    string        phoneNumber     parameter: Required
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) CreateBulkRelease (
            phoneNumber string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/massreleasenumber.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "PhoneNumber" : phoneNumber,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

/**
 * Retrieve a list of available phone numbers that can be purchased and used for your Ytel account.
 * @param    models_pkg.NumbertypeEnum        numbertype     parameter: Required
 * @param    string                           areacode       parameter: Required
 * @param    *int64                           pagesize       parameter: Optional
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) CreateAvailableNumbers (
            numbertype models_pkg.NumbertypeEnum,
            areacode string,
            pagesize *int64) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/availablenumber.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "numbertype" : models_pkg.NumbertypeEnumToValue(numbertype),
        "areacode" : areacode,
        "pagesize" : pagesize,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

/**
 * Update properties for a Ytel number that has been purchased for your account. Refer to the parameters list for the list of properties that can be updated.
 * @param    string         phoneNumber              parameter: Required
 * @param    string         voiceUrl                 parameter: Required
 * @param    *string        friendlyName             parameter: Optional
 * @param    *string        voiceMethod              parameter: Optional
 * @param    *string        voiceFallbackUrl         parameter: Optional
 * @param    *string        voiceFallbackMethod      parameter: Optional
 * @param    *string        hangupCallback           parameter: Optional
 * @param    *string        hangupCallbackMethod     parameter: Optional
 * @param    *string        heartbeatUrl             parameter: Optional
 * @param    *string        heartbeatMethod          parameter: Optional
 * @param    *string        smsUrl                   parameter: Optional
 * @param    *string        smsMethod                parameter: Optional
 * @param    *string        smsFallbackUrl           parameter: Optional
 * @param    *string        smsFallbackMethod        parameter: Optional
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) UpdateNumber (
            phoneNumber string,
            voiceUrl string,
            friendlyName *string,
            voiceMethod *string,
            voiceFallbackUrl *string,
            voiceFallbackMethod *string,
            hangupCallback *string,
            hangupCallbackMethod *string,
            heartbeatUrl *string,
            heartbeatMethod *string,
            smsUrl *string,
            smsMethod *string,
            smsFallbackUrl *string,
            smsFallbackMethod *string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/updatenumber.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "PhoneNumber" : phoneNumber,
        "VoiceUrl" : voiceUrl,
        "FriendlyName" : friendlyName,
        "VoiceMethod" : voiceMethod,
        "VoiceFallbackUrl" : voiceFallbackUrl,
        "VoiceFallbackMethod" : voiceFallbackMethod,
        "HangupCallback" : hangupCallback,
        "HangupCallbackMethod" : hangupCallbackMethod,
        "HeartbeatUrl" : heartbeatUrl,
        "HeartbeatMethod" : heartbeatMethod,
        "SmsUrl" : smsUrl,
        "SmsMethod" : smsMethod,
        "SmsFallbackUrl" : smsFallbackUrl,
        "SmsFallbackMethod" : smsFallbackMethod,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

/**
 * Retrieve a list of purchased phones numbers associated with your Ytel account.
 * @param    *int64                             page             parameter: Optional
 * @param    *int64                             pageSize         parameter: Optional
 * @param    models_pkg.NumberType14Enum        numberType       parameter: Optional
 * @param    *string                            friendlyName     parameter: Optional
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) CreateListNumbers (
            page *int64,
            pageSize *int64,
            numberType models_pkg.NumberType14Enum,
            friendlyName *string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/listnumber.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "Page" : page,
        "PageSize" : pageSize,
        "NumberType" : models_pkg.NumberType14EnumToValue(numberType),
        "FriendlyName" : friendlyName,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

/**
 * Update properties for a Ytel numbers that has been purchased for your account. Refer to the parameters list for the list of properties that can be updated.
 * @param    string         phoneNumber              parameter: Required
 * @param    string         voiceUrl                 parameter: Required
 * @param    *string        friendlyName             parameter: Optional
 * @param    *string        voiceMethod              parameter: Optional
 * @param    *string        voiceFallbackUrl         parameter: Optional
 * @param    *string        voiceFallbackMethod      parameter: Optional
 * @param    *string        hangupCallback           parameter: Optional
 * @param    *string        hangupCallbackMethod     parameter: Optional
 * @param    *string        heartbeatUrl             parameter: Optional
 * @param    *string        heartbeatMethod          parameter: Optional
 * @param    *string        smsUrl                   parameter: Optional
 * @param    *string        smsMethod                parameter: Optional
 * @param    *string        smsFallbackUrl           parameter: Optional
 * @param    *string        smsFallbackMethod        parameter: Optional
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) CreateBulkUpdateNumbers (
            phoneNumber string,
            voiceUrl string,
            friendlyName *string,
            voiceMethod *string,
            voiceFallbackUrl *string,
            voiceFallbackMethod *string,
            hangupCallback *string,
            hangupCallbackMethod *string,
            heartbeatUrl *string,
            heartbeatMethod *string,
            smsUrl *string,
            smsMethod *string,
            smsFallbackUrl *string,
            smsFallbackMethod *string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/massupdatenumber.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "PhoneNumber" : phoneNumber,
        "VoiceUrl" : voiceUrl,
        "FriendlyName" : friendlyName,
        "VoiceMethod" : voiceMethod,
        "VoiceFallbackUrl" : voiceFallbackUrl,
        "VoiceFallbackMethod" : voiceFallbackMethod,
        "HangupCallback" : hangupCallback,
        "HangupCallbackMethod" : hangupCallbackMethod,
        "HeartbeatUrl" : heartbeatUrl,
        "HeartbeatMethod" : heartbeatMethod,
        "SmsUrl" : smsUrl,
        "SmsMethod" : smsMethod,
        "SmsFallbackUrl" : smsFallbackUrl,
        "SmsFallbackMethod" : smsFallbackMethod,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

/**
 * Purchase a selected number of DID's from specific area codes to be used with your Ytel account.
 * @param    models_pkg.NumberType15Enum        numberType     parameter: Required
 * @param    string                             areaCode       parameter: Required
 * @param    string                             quantity       parameter: Required
 * @param    *string                            leftover       parameter: Optional
 * @return	Returns the string response from the API call
 */
func (me *PHONENUMBER_IMPL) CreateBulkBuyNumbers (
            numberType models_pkg.NumberType15Enum,
            areaCode string,
            quantity string,
            leftover *string) (string, error) {
        //the base uri for api requests
    _queryBuilder := configuration_pkg.BASEURI;

    //prepare query string for API call
   _queryBuilder = _queryBuilder + "/incomingphone/bulkbuy.json"

    //variable to hold errors
    var err error = nil
    //validate and preprocess url
    _queryBuilder, err = apihelper_pkg.CleanUrl(_queryBuilder)
    if err != nil {
        //error in url validation or cleaning
        return "", err
    }

    //prepare headers for the outgoing request
    headers := map[string]interface{} {
        "user-agent" : "APIMATIC 2.0",
    }

    //form parameters
    parameters := map[string]interface{} {

        "NumberType" : models_pkg.NumberType15EnumToValue(numberType),
        "AreaCode" : areaCode,
        "Quantity" : quantity,
        "Leftover" : leftover,

    }


    //prepare API request
    _request := unirest.PostWithAuth(_queryBuilder, headers, parameters, me.config.BasicAuthUserName(), me.config.BasicAuthPassword())
    //and invoke the API call request to fetch the response
    _response, err := unirest.AsString(_request);
    if err != nil {
        //error in API invocation
        return "", err
    }

    //error handling using HTTP status codes
    if (_response.Code < 200) || (_response.Code > 206) { //[200,206] = HTTP OK
        err = apihelper_pkg.NewAPIError("HTTP Response Not OK" , _response.Code, _response.RawBody)
    }
    if(err != nil) {
        //error detected in status code validation
        return "", err
    }

    //returning the response
    return _response.Body, nil

}

